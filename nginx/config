ngx_addon_name="ngx_js_module"

NJS_DEPS="$ngx_addon_dir/ngx_js.h"
NJS_SRCS="$ngx_addon_dir/ngx_js.c \
    $ngx_addon_dir/ngx_js_fetch.c"

if [ $HTTP != NO ]; then
    ngx_module_type=HTTP_AUX_FILTER
    ngx_module_name=ngx_http_js_module
    ngx_module_incs="$ngx_addon_dir/../src $ngx_addon_dir/../build"
    ngx_module_deps="$ngx_addon_dir/../build/libnjs.a $NJS_DEPS"
    ngx_module_srcs="$ngx_addon_dir/ngx_http_js_module.c $NJS_SRCS"
    ngx_module_libs="PCRE $ngx_addon_dir/../build/libnjs.a -lm"

    . auto/module

    if [ "$ngx_module_link" != DYNAMIC ]; then
        NJS_SRCS=
    fi
fi

if [ $USE_OPENSSL != NO ]; then
    OPENSSLDIR=`openssl version -d | cut -d '"' -f 2`
    if [ -d "$OPENSSLDIR" ]; then
        if [ -f "$OPENSSLDIR/cert.pem" ]; then
            have=NGX_OPENSSL_CERT_FILE value="\"$OPENSSLDIR/cert.pem\""
            . auto/define
        elif [ -d "$OPENSSLDIR/certs" ]; then
            have=NGX_OPENSSL_CERT_DIR value="\"$OPENSSLDIR/certs\""
            . auto/define
        else
            echo "Cannot find openssl truststore (openssldir=$OPENSSLDIR)"
            exit 1
        fi
    else
        echo Cannot find openssldir
        exit 1
    fi
fi

if [ $STREAM != NO ]; then
    ngx_module_type=STREAM
    ngx_module_name=ngx_stream_js_module
    ngx_module_incs="$ngx_addon_dir/../src $ngx_addon_dir/../build"
    ngx_module_deps="$ngx_addon_dir/../build/libnjs.a $NJS_DEPS"
    ngx_module_srcs="$ngx_addon_dir/ngx_stream_js_module.c $NJS_SRCS"
    ngx_module_libs="PCRE $ngx_addon_dir/../build/libnjs.a -lm"

    . auto/module
fi
